@using Escuelas.UI.Helpers;

@model Escuelas.UI.Models.RelevamientoModelo

@{
    if (Model.Relevamiento.ID != null && Model.Relevamiento.ID > 0)
    {
        ViewBag.Title = "Editar Relevamiento";
    }
    else
    {
        ViewBag.Title = "Agregar Relevamiento";
    }

       
}
@section featured {

    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
            </p>
        </div>
    </section>
}



<fieldset>
    <legend>Relevamiento</legend>

    @if (ViewBag.Mensaje != null && ViewBag.Mensaje != "")
    { 
        <ul style="color: green; font-weight: bold; font-size: large">
            <li>@ViewBag.Mensaje</li>
        </ul> 
    }


    <div id="tabs" style="display: none">
        <ul>
            <li><a href="#tabs-1">Información General</a></li>
            <li><a href="#tabs-2">Máquinas</a></li>
            <li><a href="#tabs-3">Dispositivos de Red</a></li>
            <li><a href="#tabs-4">Otros Dispositivos</a></li>
            <li><a href="#tabs-5">Servicios</a></li>
            <li><a href="#tabs-6">Herr. Software</a></li>
            <li><a href="#tabs-7">Capacitación</a></li>
            <li><a href="#tabs-8">Comentarios</a></li>
            <li><a href="#tabs-9">Seg. Pedagógico</a></li>
            <li><a href="#tabs-10">Imagenes</a></li>
        </ul>

        <div id="tabs-1" class="TabClase">
            @Html.HiddenFor(model => model.TabActivo)
            @using (Html.BeginForm("EditarRelevamiento", "Relevamiento", FormMethod.Post, new { id = "frmRelevamiento" }))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.Relevamiento.Escuela.Distrito)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Relevamiento.Escuela.Distrito.ID, new SelectList(ViewBag.ListaDistritos, "Value", "Text", Model.Relevamiento.Escuela.Distrito.ID), new { id = "ddlDistrito", onchange = "CargarEscuelas(this);" })
                    @Html.ValidationMessageFor(model => model.Relevamiento.Escuela.Distrito.ID)

                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Relevamiento.Escuela)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Relevamiento.Escuela.ID, new SelectList(ViewBag.ListaEscuelas, "Value", "Text", Model.Relevamiento.Escuela.ID), new { id = "ddlEscuela", onchange = "CargarDatosEscuela(this);" })
                    @Html.ValidationMessageFor(model => model.Relevamiento.Escuela.ID)

                    @if (Model.Relevamiento.ID == null || (Model.Relevamiento.ID != null && Model.Relevamiento.ID == 0))
                    { 
                        @Html.ActionLink("Copiar Ultimo Relevamiento", "CopiarUltimoRelevamiento", new { }, new { id = "btnCopiarRelevamiento" })
                    }


                </div>
               
                @Html.HiddenFor(modelItem => modelItem.Relevamiento.Escuela.Director)
                @Html.HiddenFor(modelItem => modelItem.Relevamiento.Escuela.ViceDirector)
                <div id="divDirector">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Relevamiento.Escuela.Director)
                    </div>
                    <div class="editor-field">
                        <label id="lblDirector" style="font-size: small"></label>
                    </div>
                </div>
                <div id="divViceDirector">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Relevamiento.Escuela.ViceDirector)
                    </div>
                    <div class="editor-field">
                        <label id="lblViceDirector" style="font-size: small"></label>
                    </div>
                </div>       

                <div class="editor-label">
                    @Html.LabelFor(model => model.Relevamiento.TieneADM)
                </div>
                <div class="editor-field">
                    @Html.RadioButtonFor(model => model.Relevamiento.TieneADM, "No")&nbsp;No
            &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Relevamiento.TieneADM, "Si")&nbsp;Si
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Relevamiento.AtendidoPor)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Relevamiento.AtendidoPor, new { id = "txtAtendidoPor" })
                    @Html.ValidationMessageFor(model => model.Relevamiento.AtendidoPor)
                </div>               
       
                <p>
                    <input type="submit" value="Guardar" />
                </p>
            }
        </div>
        <div id="tabs-2" class="TabClase">

            <script type="text/javascript">
                $(function () {
                    $("#tblMaquina").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                    .tablesorterPager({ container: $("#pagerMaquina"), size: $(".pagesize option:selected").val() });
                });
        </script>

            <table id="tblMaquina" class="tablesorter">
                <thead>
                <tr>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaMaquinas[0].Maquina.Nombre)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaMaquinas[0].Maquina.Marca)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaMaquinas[0].Maquina.SistemaOperativo)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaMaquinas[0].Maquina.MemoriaRAM)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaMaquinas[0].Maquina.CapacidadDiscoDuro)
                    </th>
                    <th></th>
                
                </tr>
                    </thead>
                <tbody>
                @if (Model.ListaMaquinas != null && Model.ListaMaquinas.Count() > 0)
                {
                    foreach (var item in Model.ListaMaquinas)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Maquina.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Maquina.Marca)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Maquina.SistemaOperativo)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Maquina.MemoriaRAM)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Maquina.CapacidadDiscoDuro)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarMaquina('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarMaquina", new { maqId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Maquina")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">No hay máquinas cargadas
                        </td>
                    </tr>
                }
                    </tbody>
            </table>
            <div id="pagerMaquina" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>
              <br />
            <br />
            <h4><u>Cargar Máquina:</u></h4>
            @using (Html.BeginForm("EditarMaquina", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)

                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Maquina_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Maquina_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Maquina_AtendidoPor" })

                @Html.HiddenFor(model => model.Maquina.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.Maquina.Nombre)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Maquina.Nombre)
                    @Html.ValidationMessageFor(model => model.Maquina.Nombre)
                </div>
                
                <section class="round-border">
                    <h5 style="float: left;">CPU</h5>
                    <div href="#collapseCPU" class="nav-toggle">
                        <img src="~/Images/ico/toggle_expand_48.ico" width="24px" />
                    </div>
                    <div class="clear" />
                    <div id="collapseCPU" style="display: none">
                        <table class="GroupTable" style="width: 100%; border: hidden">
                            <tr>
                                <td valign="top">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.Marca)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.Marca)
                                        @Html.ValidationMessageFor(model => model.Maquina.Marca)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.Procesador)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.Procesador)
                                        @Html.ValidationMessageFor(model => model.Maquina.Procesador)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.SistemaOperativo)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.SistemaOperativo)
                                        @Html.ValidationMessageFor(model => model.Maquina.SistemaOperativo)
                                    </div>
                                </td>
                                <td valign="top">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.MemoriaRAM)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.MemoriaRAM)
                                        @Html.ValidationMessageFor(model => model.Maquina.MemoriaRAM)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.CapacidadDiscoDuro)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.CapacidadDiscoDuro)
                                        @Html.ValidationMessageFor(model => model.Maquina.CapacidadDiscoDuro)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.PlacaVideo)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.PlacaVideo)
                                        @Html.ValidationMessageFor(model => model.Maquina.PlacaVideo)
                                    </div>
                                </td>
                            </tr>
                        </table>

                    </div>
                </section>
                
                <section class="round-border">
                    <h5 style="float: left;">Multimedia</h5>
                    <div href="#collapseMultimedia" class="nav-toggle">
                        <img src="~/Images/ico/toggle_expand_48.ico" width="24px" />
                    </div>
                    <div class="clear" />
                    <div id="collapseMultimedia" style="display: none">
                        <table class="GroupTable" style="width: 100%; border: hidden">
                            <tr>
                                <td valign="top">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.DispositivoSonido)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.DispositivoSonido)
                                        @Html.ValidationMessageFor(model => model.Maquina.DispositivoSonido)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.Monitor)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.Monitor)
                                        @Html.ValidationMessageFor(model => model.Maquina.Monitor)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.PuertosUSBFrontales)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.PuertosUSBFrontales)
                                        @Html.ValidationMessageFor(model => model.Maquina.PuertosUSBFrontales)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.PuertosUSBTraseros)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Maquina.PuertosUSBTraseros)
                                        @Html.ValidationMessageFor(model => model.Maquina.PuertosUSBTraseros)
                                    </div>
                                </td>
                                <td valign="top">
                                    <div class="editor-label" >
                                        @Html.LabelFor(model => model.Maquina.TieneMicrofono)
                                    </div>
                                    <div class="editor-field"  style="padding-top:8px;height:46px">
                                        @Html.RadioButtonFor(model => model.Maquina.TieneMicrofono, "No")&nbsp;No
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.TieneMicrofono, "Si")&nbsp;Si
                                    </div>
                                    
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.CDLectGrab)
                                    </div>
                                    <div class="editor-field" style="padding-top:8px;height:46px">
                                        @Html.RadioButtonFor(model => model.Maquina.CDLectGrab, "No Tiene")&nbsp;No Tiene
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.CDLectGrab, "Lectora")&nbsp;Lectora
                        &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.CDLectGrab, "Lectora/Grabadora")&nbsp;Lectora/Grabadora
                                    </div>
                                    
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.DVDLectGrab)
                                    </div>
                                    <div class="editor-field" style="padding-top:8px;height:46px">
                                        @Html.RadioButtonFor(model => model.Maquina.DVDLectGrab, "No Tiene")&nbsp;No Tiene
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.DVDLectGrab, "Lectora")&nbsp;Lectora
                        &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.DVDLectGrab, "Lectora/Grabadora")&nbsp;Lectora/Grabadora
                                    </div>
                                    <div class="editor-label" >
                                        @Html.LabelFor(model => model.Maquina.Webcam)
                                    </div>
                                    <div class="editor-field" style="padding-top:8px;height:46px">
                                        @Html.RadioButtonFor(model => model.Maquina.Webcam, "No")&nbsp;No
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.Webcam, "Si")&nbsp;Si
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Maquina.Disquetera)
                                    </div>
                                    <div class="editor-field" style="padding-top:8px;height:46px">
                                        @Html.RadioButtonFor(model => model.Maquina.Disquetera, "No")&nbsp;No Tiene
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.Disquetera, "3 1/2")&nbsp;3 1/2
                        &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.Disquetera, "5 1/4")&nbsp;5 1/4
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </section>


                <section class="round-border">
                    <h5 style="float: left">Red</h5>
                    <div href="#collapseRed" class="nav-toggle">
                        <img src="~/Images/ico/toggle_expand_48.ico" width="24px" />
                    </div>
                    <div class="clear" />
                    <div id="collapseRed" style="display: none">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Maquina.PerteneceARed)
                        </div>
                        <div class="editor-field">
                            @Html.RadioButtonFor(model => model.Maquina.PerteneceARed, "No")&nbsp;No
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.PerteneceARed, "Si")&nbsp;Si
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Maquina.IP)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Maquina.IP)
                            @Html.ValidationMessageFor(model => model.Maquina.IP)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Maquina.GrupoDeTrabajo)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Maquina.GrupoDeTrabajo)
                            @Html.ValidationMessageFor(model => model.Maquina.GrupoDeTrabajo)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Maquina.Ubicacion)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Maquina.Ubicacion)
                            @Html.ValidationMessageFor(model => model.Maquina.Ubicacion)
                        </div>
                    </div>
                </section>
                <br />
                <div class="editor-label">
                    @Html.LabelFor(model => model.Maquina.Funciona)
                </div>
                <div class="editor-field" style="padding-top:8px;height:46px">
                    @Html.RadioButtonFor(model => model.Maquina.Funciona, "No")&nbsp;No
        &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Maquina.Funciona, "Si")&nbsp;Si
                </div>
                
                <p>
                    <input type="submit" value="Agregar Máquina" id="btnAgregarMaquina" onclick="ActualizarHiddens('Maquina');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposMaquina();" />
                </p>
            }
        </div>
        <div id="tabs-3" class="TabClase">
        <script type="text/javascript">
            $(function () {
                $("#tblDispositivoRed").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                .tablesorterPager({ container: $("#pagerDispositivoRed"), size: $(".pagesize option:selected").val() });
            });
        </script>
            <table id="tblDispositivoRed" class="tablesorter">
                <thead>
                <tr>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.TipoDispositivoRed)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.Marca)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.Modelo)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.PuertosTotales)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.PuertosUtilizados)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivosRed[0].DispositivoRed.Protocolo)
                    </th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @if (Model.ListaDispositivosRed != null && Model.ListaDispositivosRed.Count() > 0)
                {
                    foreach (var item in Model.ListaDispositivosRed)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.TipoDispositivoRed.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.Marca)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.Modelo)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.PuertosTotales)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.PuertosUtilizados)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.DispositivoRed.Protocolo)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarDispositivoRed('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarDispositivoRed", new { disRedId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Dispositivo de Rsed")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">No hay dispositivos de red cargados
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <div id="pagerDispositivoRed" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>        
            <br />
            <br />
            <h4><u>Cargar Dispositivo de Red: </u></h4>
            <br />
            @using (Html.BeginForm("EditarDispositivoRed", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_DispositivoRed_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_DispositivoRed_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_DispositivoRed_AtendidoPor" })
                @Html.HiddenFor(model => model.DispositivoRed.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.DispositivoRed.TipoDispositivoRed)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.DispositivoRed.TipoDispositivoRed.ID, new SelectList(ViewBag.ListaTipoDispositivosRed, "Value", "Text", Model.DispositivoRed.TipoDispositivoRed.ID))
                    @Html.ValidationMessageFor(model => model.DispositivoRed.TipoDispositivoRed.ID)
                </div>
                <table class="GroupTable" style="width: 100%; border: hidden">
                    <tr>
                        <td valign="top">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.Marca)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.Marca)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.Marca)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.Modelo)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.Modelo)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.Modelo)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.Ubicacion)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.Ubicacion)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.Ubicacion)
                            </div>
                        </td>
                        <td valign="top">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.PuertosTotales)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.PuertosTotales)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.PuertosTotales)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.PuertosUtilizados)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.PuertosUtilizados)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.PuertosUtilizados)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DispositivoRed.Protocolo)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DispositivoRed.Protocolo)
                                @Html.ValidationMessageFor(model => model.DispositivoRed.Protocolo)
                            </div>
                        </td>
                    </tr>
                </table>
                <div class="editor-label">
                    @Html.LabelFor(model => model.DispositivoRed.Descripcion)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.DispositivoRed.Descripcion)
                    @Html.ValidationMessageFor(model => model.DispositivoRed.Descripcion)
                </div>
                <p>
                    <input type="submit" value="Agregar Dispositivo de Red" id="btnAgregarDispositivoRed" onclick="ActualizarHiddens('DispositivoRed');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposDispositivoRed();" />
                </p>
            }
        </div>

        <div id="tabs-4" class="TabClase">
             <script type="text/javascript">
                 $(function () {
                     $("#tblDispositivo").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                     .tablesorterPager({ container: $("#pagerDispositivo"), size: $(".pagesize option:selected").val() });
                 });
        </script>
            <table id="tblDispositivo" class="tablesorter">
                <thead>
                <tr>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivos[0].Dispositivo.TipoDispositivo)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivos[0].Dispositivo.Marca)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivos[0].Dispositivo.Modelo)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaDispositivos[0].Dispositivo.Ubicacion)
                    </th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @if (Model.ListaDispositivos != null && Model.ListaDispositivos.Count() > 0)
                {
                    foreach (var item in Model.ListaDispositivos)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Dispositivo.TipoDispositivo.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Dispositivo.Marca)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Dispositivo.Modelo)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Dispositivo.Ubicacion)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarOtroDispositivo('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarDispositivo", new { disId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Dispositivo")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No hay dispositivos cargados
                        </td>
                    </tr>
                }
                </tbody>
            </table>
             <div id="pagerDispositivo" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>        
            <br />
            <br />
            <h4><u>Cargar Dispositivo: </u></h4>
            <br />
            @using (Html.BeginForm("EditarDispositivo", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Dispositivo_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Dispositivo_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Dispositivo_AtendidoPor" })
                @Html.HiddenFor(model => model.Dispositivo.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.Dispositivo.TipoDispositivo)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Dispositivo.TipoDispositivo.ID, new SelectList(ViewBag.ListaTipoDispositivos, "Value", "Text", Model.Dispositivo.TipoDispositivo.ID))
                    @Html.ValidationMessageFor(model => model.Dispositivo.TipoDispositivo.ID)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Dispositivo.Marca)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Dispositivo.Marca)
                    @Html.ValidationMessageFor(model => model.Dispositivo.Marca)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Dispositivo.Modelo)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Dispositivo.Modelo)
                    @Html.ValidationMessageFor(model => model.Dispositivo.Modelo)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Dispositivo.Ubicacion)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Dispositivo.Ubicacion)
                    @Html.ValidationMessageFor(model => model.Dispositivo.Ubicacion)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Dispositivo.Descripcion)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Dispositivo.Descripcion)
                    @Html.ValidationMessageFor(model => model.Dispositivo.Descripcion)
                </div>
                <p>
                    <input type="submit" value="Agregar Dispositivo" id="btnAgregarDispositivo" onclick="ActualizarHiddens('Dispositivo');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposDispositivo();" />
                </p>
            }
        </div>

        <div id="tabs-5" class="TabClase">

             <script type="text/javascript">
                 $(function () {
                     $("#tblServicio").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                     .tablesorterPager({ container: $("#pagerServicio"), size: $(".pagesize option:selected").val() });
                 });
        </script>

            <table id="tblServicio" class="tablesorter">
                <thead>
                <tr>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaServicios[0].Servicio.TipoServicio)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaServicios[0].Servicio.Compañia)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaServicios[0].Servicio.EsPago)
                    </th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @if (Model.ListaServicios != null && Model.ListaServicios.Count() > 0)
                {
                    foreach (var item in Model.ListaServicios)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Servicio.TipoServicio.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Servicio.Compañia)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Servicio.EsPago)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarServicio('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarServicio", new { serId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Servicio")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">No hay servicios cargados
                        </td>
                    </tr>
                }
                </tbody>
            </table>
             <div id="pagerServicio" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>        
            <br />
            <br />
            <h4><u>Cargar Servicio: </u></h4>
            <br />
            @using (Html.BeginForm("EditarServicio", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Servicio_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Servicio_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Servicio_AtendidoPor" })

                @Html.HiddenFor(model => model.Servicio.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.Servicio.TipoServicio)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Servicio.TipoServicio.ID, new SelectList(ViewBag.ListaTipoServicios, "Value", "Text", Model.Servicio.TipoServicio.ID))
                    @Html.ValidationMessageFor(model => model.Servicio.ID)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Servicio.Compañia)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Servicio.Compañia)
                    @Html.ValidationMessageFor(model => model.Servicio.Compañia)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Servicio.EsPago)
                </div>
                <div class="editor-field">
                    @Html.RadioButtonFor(model => model.Servicio.EsPago, "No")&nbsp;No
                         &nbsp;&nbsp;@Html.RadioButtonFor(model => model.Servicio.EsPago, "Si")&nbsp;Si
                        
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Servicio.Descripcion)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Servicio.Descripcion)
                    @Html.ValidationMessageFor(model => model.Servicio.Descripcion)
                </div>
                <p>
                    <input type="submit" value="Agregar Servicio" id="btnAgregarServicio" onclick="ActualizarHiddens('Servicio');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposServicio();" />
                </p>
            }
        </div>
        <div id="tabs-6" class="TabClase">
            @if (Model.ListaSoftwares != null && Model.ListaSoftwares.Count() > 0)
            {
            <script type="text/javascript">
                $(function () {
                    $("#tblSoftware").tablesorter({ widthFixed: true, sortList: [[0, 0], [2, 0]] })
                    .tablesorterPager({ container: $("#pagerSoftware"), size: $(".pagesize option:selected").val() });
                });
        </script>
            }
            <table id="tblSoftware" class="tablesorter">
                <tr>
                     <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaSoftwares[0].Software.PlataformaSoftware)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaSoftwares[0].Software.TipoSoftware)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaSoftwares[0].Software.Nombre)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaSoftwares[0].Software.Descripcion)
                    </th>
                    <th>
                    
                    </th>

                </tr>
                    </thead>
                <tbody>
                @if (Model.ListaSoftwares != null && Model.ListaSoftwares.Count() > 0)
                {
                    foreach (var item in Model.ListaSoftwares)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Software.PlataformaSoftware.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Software.TipoSoftware.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Software.Nombre)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Software.Descripcion)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarSoftware('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarSoftware", new { softId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Software")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No hay herramientas de software cargadas
                        </td>
                    </tr>
                }
                    </tbody>
            </table>
             <div id="pagerSoftware" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>        
            <br />
            <br />
            <h4><u>Cargar Software: </u></h4>
            <br />
            @using (Html.BeginForm("EditarSoftware", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Software_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Software_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Software_AtendidoPor" })
                @Html.HiddenFor(model => model.Software.ID)

                <div class="editor-label">
                    @Html.LabelFor(model => model.Software.PlataformaSoftware)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Software.PlataformaSoftware.ID, new SelectList(ViewBag.ListaPlataformaSoftwares, "Value", "Text", Model.Software.PlataformaSoftware.ID))
                    @Html.ValidationMessageFor(model => model.Software.PlataformaSoftware.ID)
                </div>
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.Software.TipoSoftware)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Software.TipoSoftware.ID, new SelectList(ViewBag.ListaTipoSoftwares, "Value", "Text", Model.Software.TipoSoftware.ID))
                    @Html.ValidationMessageFor(model => model.Software.TipoSoftware.ID)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Software.Nombre)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Software.Nombre)
                    @Html.ValidationMessageFor(model => model.Software.Nombre)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Software.Descripcion)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Software.Descripcion)
                    @Html.ValidationMessageFor(model => model.Software.Descripcion)
                </div>
                <p>
                    <input type="submit" value="Agregar Software" id="btnAgregarSoftware" onclick="ActualizarHiddens('Software');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposSoftware();" />
                </p>
            }
        </div>
        <div id="tabs-7" class="TabClase">
            <script type="text/javascript">
                $(function () {
                    $("#tblCapacitacion").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                    .tablesorterPager({ container: $("#pagerCapacitacion"), size: $(".pagesize option:selected").val() });
                });
        </script>
            <table id="tblCapacitacion" class="tablesorter">
                <thead>
                <tr>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaCapacitaciones[0].Capacitacion.Grado)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaCapacitaciones[0].Capacitacion.Curso)
                    </th>
                    <th style="text-align: center; width: 200px">
                        @Html.DisplayNameFor(model => model.ListaCapacitaciones[0].Capacitacion.Descripcion)
                    </th>
                    <th></th>
                    
                </tr>
                    </thead>
                <tbody>
                @if (Model.ListaCapacitaciones != null && Model.ListaCapacitaciones.Count() > 0)
                {
                    foreach (var item in Model.ListaCapacitaciones)
                    {
                    <tr>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Capacitacion.Grado)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Capacitacion.Curso)
                        </td>
                        <td style="text-align: center; width: 200px">
                            @Html.DisplayFor(modelItem => item.Capacitacion.Descripcion)
                        </td>
                        <td style="text-align: center; width: 50px">
                            <img src="~/Images/ico/editar22.png" onclick="EditarCapacitacion('@item.EncId');" class="EditImage" />
                            @Html.ActionImage("BorrarCapacitacion", new { capId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Capacitacion")
                        </td>
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">No hay Capacitaciones cargadas
                        </td>
                    </tr>
                }
                    </tbody>
            </table>
             <div id="pagerCapacitacion" class="pager">
  <form>
    <img src="/Content/images/first.png" class="first"/>
    <img src="/Content/images/prev.png" class="prev"/>
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
    <img src="/Content/images/next.png" class="next"/>
    <img src="/Content/images/last.png" class="last"/>
    <select class="pagesize">
        <option value="5">5</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="40">40</option>
    </select>
  </form>
</div>        
            <br />
            <br />
            <h4><u>Cargar Capacitacion: </u></h4>
            <br />
            @using (Html.BeginForm("EditarCapacitacion", "Relevamiento"))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Capacitacion_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Capacitacion_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Capacitacion_AtendidoPor" })
                @Html.HiddenFor(model => model.Capacitacion.ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model.Capacitacion.Grado)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Capacitacion.Grado, new SelectList(ViewBag.ListaGrados, "Value", "Text", Model.Capacitacion.Grado))
                    @Html.ValidationMessageFor(model => model.Capacitacion.Grado)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Capacitacion.Curso)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Capacitacion.Curso)
                    @Html.ValidationMessageFor(model => model.Capacitacion.Curso)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Capacitacion.Descripcion)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Capacitacion.Descripcion)
                    @Html.ValidationMessageFor(model => model.Capacitacion.Descripcion)
                </div>
                <p>
                    <input type="submit" value="Agregar Capacitacion" id="btnAgregarCapacitacion" onclick="ActualizarHiddens('Capacitacion');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposCapacitacion();" />
                </p>
            }
        </div>
        <div id="tabs-8" class="TabClase">
            <div class="editor-label">
                Comentarios
            </div>
            @using (Html.BeginForm("EditarComentarios", "Relevamiento"))
            {
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Comentarios, new { style = "height:50px" })
                    @Html.HiddenFor(model => model.Relevamiento.ID)
                    @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Comentarios_EscuelaId" })
                    @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Comentarios_TieneADM" })
                    @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Comentarios_AtendidoPor" })
                    @Html.HiddenFor(model => model.Imagen.ID)
                </div>
                <p>
                    <input type="submit" value="Agregar Comentario" id="btnAgregarComentario" onclick="ActualizarHiddens('Comentarios');" />

                </p>
                <div class="editor-label">
                    Historial
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.HistorialComentarios, new { @readonly = true, style = "height:500px" })

                </div>
            
            }
        </div>

        <div id="tabs-9" class="TabClase">
            <div class="editor-label">
                Seguimiento Pedagógico
            </div>
             @using (Html.BeginForm("EditarSegPedagogico", "Relevamiento"))
             {
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.SeguimientoPedagogico, new { style = "height:50px" })
                    @Html.HiddenFor(model => model.Relevamiento.ID)
                    @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_SegPedagogico_EscuelaId" })
                    @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_SegPedagogico_TieneADM" })
                    @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_SegPedagogico_AtendidoPor" })
                </div>
                <p>
                    <input type="submit" value="Agregar Comentario" id="btnAgregarComentarioSP" onclick="ActualizarHiddens('SegPedagogico');" />

                </p>
                <div class="editor-label">
                    Historial
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.HistorialSegPedagogico, new { @readonly = true, style = "height:500px" })

                </div>
            
             }
        </div>


        <div id="tabs-10" class="TabClase">
            <script type="text/javascript">
                $(function () {
                    $("#tblImagen").tablesorter({ widthFixed: true, sortList: [[0, 0]] })
                    .tablesorterPager({ container: $("#pagerImagen"), size: $(".pagesize option:selected").val() });
                });
            </script>
            <table id="tblImagen" class="tablesorter">
                <thead>
                    <tr>
                        <th style="text-align: center; width: 200px">
                            @Html.DisplayNameFor(model => model.ListaImagenes[0].Imagen.Titulo)
                        </th>
                        <th style="text-align: center; width: 200px">
                            @Html.DisplayNameFor(model => model.ListaImagenes[0].Imagen.Descripcion)
                        </th>
                        <th style="text-align: center; width: 200px">
                            @Html.DisplayNameFor(model => model.ListaImagenes[0].Imagen.Contenido)
                        </th>
                        <th style="text-align: center; width: 200px">
                            @Html.DisplayNameFor(model => model.ListaImagenes[0].Imagen.Foto)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListaImagenes != null && Model.ListaImagenes.Count() > 0)
                    {
                        foreach (var item in Model.ListaImagenes)
                        {
                        <tr>
                            <td style="text-align: center; width: 200px">
                                @Html.DisplayFor(modelItem => item.Imagen.Titulo)
                            </td>
                            <td style="text-align: center; width: 200px">
                                @Html.DisplayFor(modelItem => item.Imagen.Descripcion)
                            </td>
                            <td style="text-align: center; width: 200px">
                                @Html.DisplayFor(modelItem => item.Imagen.Contenido)
                            </td>
                            <td>
                                <img src="/Relevamiento/RetrieveImage/@item.Imagen.ID" alt="" height=100 width=200 />
                            </td>
                            <td style="text-align: center; width: 50px">
                                @*<img src="~/Images/ico/editar22.png" onclick="EditarImagen(@item.Imagen.ID);" class="EditImage" />*@ 
                                @*TODO: Editar esta dulicando registros en la base de datos, y no esta guardando la imagen que ya habia sido guardada en la carga anterior*@
                                @Html.ActionImage("BorrarImagen", new { imgId = item.EncId, relId = Model.Relevamiento.ID }, "~/Images/ico/eliminar24.ico", "Borrar Imagen")
                            </td>
                        </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">No hay Imagenes cargadas</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div id="pagerImagen" class="pager">
                <form>
                    <img src="/Content/images/first.png" class="first" />
                    <img src="/Content/images/prev.png" class="prev" />
                    <span class="pagedisplay"></span>
                    <!-- this can be any element, including an input -->
                    <img src="/Content/images/next.png" class="next" />
                    <img src="/Content/images/last.png" class="last" />
                    <select class="pagesize">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="30">30</option>
                        <option value="40">40</option>
                    </select>
                </form>
    </div>

            <br />
            
            <h4><u>Cargar nuevo contenido de Imagen: </u></h4>
            <script type="text/javascript">
                function fileCheck(obj) {
                    var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
                    if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                        alert("Solo '.jpeg','.jpg', '.png', '.gif', '.bmp' formatos permitidos.");
                    }
                }
            </script>
            @using (Html.BeginForm("EditarImagen", "Relevamiento", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Relevamiento.ID)
                @Html.HiddenFor(model => model.Relevamiento.Escuela.ID, new { id = "hdn_Imagen_EscuelaId" })
                @Html.HiddenFor(model => model.Relevamiento.TieneADM, new { id = "hdn_Imagen_TieneADM" })
                @Html.HiddenFor(model => model.Relevamiento.AtendidoPor, new { id = "hdn_Imagen_AtendidoPor" })
                @Html.HiddenFor(model => model.Imagen.ID)
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true)
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Imagen.Titulo)
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Imagen.Titulo, new { placeholder = "Titulo del Contenido" })
                            @Html.ValidationMessageFor(model => model.Imagen.Titulo)
                        </div>
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Imagen.Foto)
                        <div class="editor-field">
                            <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" value="Examinar..."/>
                            @Html.ValidationMessageFor(model => model.Imagen.Foto)
                        </div>
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Imagen.Descripcion)
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Imagen.Descripcion, new { placeholder = "Descripcion del Contenido" })
                            @Html.ValidationMessageFor(model => model.Imagen.Descripcion)
                        </div>
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Imagen.Contenido)
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Imagen.Contenido, new {placeholder = "Contenido de la Imagen" })
                            @Html.ValidationMessageFor(model => model.Imagen.Contenido)
                        </div>
                    </div>

                </div>
                <p>
                    <input type="submit" value="Agregar Imagen" id="btnAgregarImagen" onclick="ActualizarHiddens('Imagen');" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                         <input type="submit" value="Cancelar" onclick="javascript: return ResetCamposImagen();" />
                </p>
                              
            }
        </div>
    </div>

    <div id="pop-up" style="height: 100px">
        <h3>Maquina:</h3>
        <p>
            Descripcion Maquina
        </p>


    </div>

</fieldset>


@*<div>
    @Html.ActionLink("Volver al listado de relevamientos", "RelevamientoIndex")
</div>*@

@section Scripts {
        <script src="/Scripts/jquery.validate.min.js"></script>
    <script src="/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var tabAct = parseInt($("#TabActivo").val())

            $("#tabs").tabs({ active: tabAct });

            $("#tabs").show();


            if ($("#Relevamiento_Escuela_Director").val() != "") {
                $("#lblDirector").text($("#Relevamiento_Escuela_Director").val());
                $("#divDirector").show();
            }
            else {
                $("#divDirector").hide();
            }

            if ($("#Relevamiento_Escuela_ViceDirector").val() != "") {
                $("#lblViceDirector").text($("#Relevamiento_Escuela_ViceDirector").val());
                $("#divViceDirector").show();
            }
            else {
                $("#divViceDirector").hide();
            }

            $('#btnCopiarRelevamiento').click(function () {
                var escuelaId = $("#ddlEscuela").val();

                $(this).attr("href", $(this).attr("href") + "?escuelaId=" + escuelaId);
            });


            $('.nav-toggle').click(function () {
                //get collapse content selector
                var collapse_content_selector = $(this).attr('href');

                //make the collapse content to be shown or hide
                var toggle_switch = $(this);
                $(collapse_content_selector).toggle(function () {
                    if ($(this).css('display') == 'none') {
                        //change the button label to be 'Show'
                        toggle_switch.html('<img src="/Images/ico/toggle_expand_48.ico" width="24px"/>');
                    } else {
                        //change the button label to be 'Hide'
                        toggle_switch.html('<img src="/Images/ico/toggle_collapse_48.ico" width="24px"/>');
                    }
                });
            });

        });




        function ActualizarHiddens(nombreEntidad) {
            var escuelaId = 0;

            if (!isNaN($('#ddlEscuela').val()))
                escuelaId = $('#ddlEscuela').val();

            $('#hdn_' + nombreEntidad + '_EscuelaId').val(escuelaId);

            $('#hdn_' + nombreEntidad + '_AtendidoPor').val($('#txtAtendidoPor').val());

            var tieneADM = $("input[name='Relevamiento.TieneADM']:checked", "#frmRelevamiento").val()

            $('#hdn_' + nombreEntidad + '_TieneADM').val(tieneADM);
        };


        function CargarEscuelas(dropdown) {

            var distId = dropdown.value;
            showProgress();
            $('#ddlEscuela').attr("disabled", "disabled");

            $.getJSON("CargarEscuelasPorDistrito2Async", { DistrId: distId }, actualizarEscuelas)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })





        };

        function CargarDatosEscuela(dropdown) {

            var escId = dropdown.value;
            showProgress();

            $.getJSON("CargarDatosEscuelaAsync", { EscId: escId }, actualizarCamposEscuela)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })



        }

        actualizarEscuelas = function (data) {

            var ddl = $('#ddlEscuela');
            ddl.empty();

            $(data).each(function () {
                $(document.createElement('option'))
                    .attr('value', this.Value)
                    .text(this.Text)
                    .appendTo(ddl);
            });

            hideProgress();


            $('#ddlEscuela').removeAttr("disabled");

            var escId = 0;

            if (ddl.val() != null) {
                escId = ddl.val();
            }

            $.getJSON("CargarDatosEscuelaAsync", { EscId: escId }, actualizarCamposEscuela)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })

        };

        actualizarCamposEscuela = function (data) {

            if (data.Director != "") {
                $("#lblDirector").text(data.Director);
                $("#divDirector").show();
            }
            else {
                $("#divDirector").hide();
            }

            if (data.ViceDirector != "") {
                $("#lblViceDirector").text(data.ViceDirector);
                $("#divViceDirector").show();
            }
            else {
                $("#divViceDirector").hide();
            }

            $("#HistorialComentarios").val(data.HistorialComentarios);
            $("#HistorialSegPedagogico").val(data.HistorialSegPedagogico);

            hideProgress();
        }
        function EditarMaquina(maqId) {
            showProgress();
            $.getJSON("ObtenerMaquinaAsync", { MaqId: maqId }, actualizarCamposMaquina)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })

        };
        function EditarOtroDispositivo(disId) {

            showProgress();
            $.getJSON("ObtenerDispositivoAsync", { DisId: disId }, actualizarCamposDispositivo)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })


        };

        function EditarServicio(serId) {

            showProgress();
            $.getJSON("ObtenerServicioAsync", { SerId: serId }, actualizarCamposServicio)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })


        };
        function EditarCapacitacion(capId) {

            showProgress();
            $.getJSON("ObtenerCapacitacionAsync", { CapId: capId }, actualizarCamposCapacitacion)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })

        };

        function EditarImagen(imgId) {

            showProgress();
            $.getJSON("ObtenerImagenAsync", { ImgId: imgId }, actualizarCamposImagen)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })

        };
        
        function EditarDispositivoRed(disRedId) {

            showProgress();
            $.getJSON("ObtenerDispositivoRedAsync", { DisRedId: disRedId }, actualizarCamposDispositivoRed)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })


        };

        function EditarSoftware(softId) {

            showProgress();
            $.getJSON("ObtenerSoftwareAsync", { SoftId: softId }, actualizarCamposSoftware)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })


        };
        actualizarCamposMaquina = function (data) {



            $('#Maquina_ID').val(data.ID);
            $("#Maquina_Marca").val(data.Marca);
            $("#Maquina_Nombre").val(data.Nombre);
            $("#Maquina_Procesador").val(data.Procesador);
            $("#Maquina_MemoriaRAM").val(data.MemoriaRAM);
            $("#Maquina_CapacidadDiscoDuro").val(data.CapacidadDiscoDuro);
            $("#Maquina_SistemaOperativo").val(data.SistemaOperativo);
            $("#Maquina_DispositivoSonido").val(data.DispositivoSonido);
            $("#Maquina_Comentarios").val(data.Comentarios);
            $("#Maquina_PlacaVideo").val(data.PlacaVideo);
            $("#Maquina_PuertosUSBFrontales").val(data.PuertosUSBFrontales);
            $("#Maquina_PuertosUSBTraseros").val(data.PuertosUSBTraseros);

            ActualizarRadio("Maquina.PerteneceARed", data.PerteneceARed);

            ActualizarRadio("Maquina.TieneMicrofono", data.TieneMicrofono);

            ActualizarRadio("Maquina.Funciona", data.Funciona);
                
            ActualizarRadio("Maquina.CDLectGrab", data.CDLectGrab);

            ActualizarRadio("Maquina.DVDLectGrab", data.DVDLectGrab);

            ActualizarRadio("Maquina.Disquetera", data.Disquetera);

            $("#Maquina_Monitor").val(data.Monitor);

            ActualizarRadio("Maquina.Webcam", data.Webcam);

            $("#Maquina_GrupoDeTrabajo").val(data.GrupoDeTrabajo);

            $("#Maquina_IP").val(data.IP);

            $("#Maquina_Ubicacion").val(data.Ubicacion);

            document.getElementById("btnAgregarMaquina").value = "Actualizar Maquina";

            hideProgress();

        };

        actualizarCamposDispositivo = function (data) {


            $('#Dispositivo_ID').val(data.ID);
            $("#Dispositivo_Marca").val(data.Marca);
            $("#Dispositivo_Modelo").val(data.Modelo);
            $("#Dispositivo_Ubicacion").val(data.Ubicacion);
            $("#Dispositivo_Descripcion").val(data.Descripcion);
            $("#Dispositivo_TipoDispositivo_ID").val(data.TipoDispositivoId);


            document.getElementById("btnAgregarDispositivo").value = "Actualizar Dispositivo";

            hideProgress();

        };

        actualizarCamposSoftware = function (data) {


            $('#Software_ID').val(data.ID);
            $("#Software_Nombre").val(data.Nombre)
            $("#Software_Descripcion").val(data.Descripcion);
            $("#Software_TipoSoftware_ID").val(data.TipoSoftwareId);
            $("#Software_PlataformaSoftware_ID").val(data.PlataformaSoftwareId);


            document.getElementById("btnAgregarSoftware").value = "Actualizar Software";

            hideProgress();

        };


        actualizarCamposServicio = function (data) {


            $('#Servicio_ID').val(data.ID);
            $("#Servicio_Compa_ia").val(data.Compañia);
            ActualizarRadio("Servicio.EsPago", data.EsPago);
            $("#Servicio_Descripcion").val(data.Descripcion);
            $("#Servicio_TipoServicio_ID").val(data.TipoServicioId);


            document.getElementById("btnAgregarServicio").value = "Actualizar Servicio";

            hideProgress();

        };
        actualizarCamposCapacitacion = function (data) {


            $('#Capacitacion_ID').val(data.ID);
            $("#Capacitacion_Curso").val(data.Curso);
            $("#Capacitacion_Descripcion").val(data.Descripcion);
            $("#Capacitacion_Grado").val(data.Grado);


            document.getElementById("btnAgregarCapacitacion").value = "Actualizar Capacitacion";

            hideProgress();
        };
        actualizarCamposImagen = function (data) {


            $('#Imagen_ID').val(data.ID);
            $("#Imagen_Titulo").val(data.Titulo);
            $("#Imagen_Descripcion").val(data.Descripcion);
            $("#Imagen_Contenido").val(data.Contenido);
            $("#Imagen_Foto").val(data.Foto);


            document.getElementById("btnAgregarImagen").value = "Actualizar Imagen";

            hideProgress();
        };
        actualizarCamposDispositivoRed = function (data) {


            $('#DispositivoRed_ID').val(data.ID);
            $("#DispositivoRed_Marca").val(data.Marca);
            $("#DispositivoRed_Modelo").val(data.Modelo);
            $("#DispositivoRed_Ubicacion").val(data.Ubicacion);
            $("#DispositivoRed_Descripcion").val(data.Descripcion);
            $("#DispositivoRed_PuertosUtilizados").val(data.PuertosUtilizados);
            $("#DispositivoRed_PuertosTotales").val(data.PuertosTotales);
            $("#DispositivoRed_Protocolo").val(data.Protocolo);
            $("#DispositivoRed_TipoDispositivoRed_ID").val(data.TipoDispositivoRedId);


            document.getElementById("btnAgregarDispositivoRed").value = "Actualizar Dispositivo de Red";

            hideProgress();

        };

        function ResetCamposMaquina() {

            $('#Maquina_ID').val("");
            $("#Maquina_Marca").val("");
            $("#Maquina_Nombre").val("");
            $("#Maquina_Procesador").val("");
            $("#Maquina_MemoriaRAM").val("");
            $("#Maquina_CapacidadDiscoDuro").val("");
            $("#Maquina_SistemaOperativo").val("");
            $("#Maquina_DispositivoSonido").val("");
            $("#Maquina_Comentarios").val("");
            $("#Maquina_PlacaVideo").val("");
            $("#Maquina_PuertosUSBFrontales").val("0");
            $("#Maquina_PuertosUSBTraseros").val("0");

            ActualizarRadio("Maquina.PerteneceARed", null);

            ActualizarRadio("Maquina.TieneMicrofono", null);

            ActualizarRadio("Maquina.Funciona", null)

            ActualizarRadio("Maquina.CDLectGrab", null)

            ActualizarRadio("Maquina.DVDLectGrab", null)

            ActualizarRadio("Maquina.Disquetera", null)

            ActualizarRadio("Maquina.Webcam", null)

            document.getElementById("btnAgregarMaquina").value = "Agregar Maquina";

            $("#Maquina_GrupoDeTrabajo").val("");

            $("#Maquina_Monitor").val("");

            $("#Maquina_IP").val("");

            $("#Maquina_Ubicacion").val("");

            return false;
        }

        function ResetCamposServicio() {

            $('#Servicio_ID').val("");
            $("#Servicio_Compa_ia").val("");
            $("#Servicio_Descripcion").val("");

            ActualizarRadio("Servicio.EsPago", null);

            $("#Servicio_TipoServicio_ID").val($("#Servicio_TipoServicio_ID option:first").val());

            document.getElementById("btnAgregarServicio").value = "Agregar Servicio";

            return false;
        }

        function ResetCamposCapacitacion() {

            $('#Capacitacion_ID').val("");
            $("#Capacitacion_Curso").val("");
            $("#Capacitacion_Descripcion").val("");

            $("#Capacitacion_Grado").val($("#Capacitacion_Grado option:first").val());

            document.getElementById("btnAgregarCapacitacion").value = "Agregar Capacitacion";

            return false;
        }

        function ResetCamposImagen() {

            $('#Imagen_ID').val("");
            $("#Imagen_Titulo").val("");
            $("#Imagen_Descripcion").val("");
            $("#Imagen_Contenido").val("");
            $("#Imagen_Foto").val("");

            document.getElementById("btnAgregarImagen").value = "Agregar Imagen";

            return false;
        }

        function ResetCamposDispositivo() {

            $('#Dispositivo_ID').val("");
            $("#Dispositivo_Marca").val("");
            $("#Dispositivo_Modelo").val("");
            $("#Dispositivo_Ubicacion").val("");
            $("#Dispositivo_Descripcion").val("");

            $("#Dispositivo_TipoDispositivo_ID").val($("#Dispositivo_TipoDispositivo_ID option:first").val());

            document.getElementById("btnAgregarDispositivo").value = "Agregar Dispositivo";

            return false;
        }

        function ResetCamposSoftware() {

            $('#Software_ID').val("");
            $("#Software_Nombre").val("");
            $("#Software_Descripcion").val("");

            $("#Software_TipoSoftware_ID").val($("#Software_TipoSoftware_ID option:first").val());

            $("#Software_PlataformaSoftware_ID").val($("#Software_PlataformaSoftware_ID option:first").val());

            document.getElementById("btnAgregarSoftware").value = "Agregar Software";

            return false;
        }


        function ResetCamposDispositivoRed() {

            $('#DispositivoRed_ID').val("");
            $("#DispositivoRed_Marca").val("");
            $("#DispositivoRed_Modelo").val("");
            $("#DispositivoRed_Ubicacion").val("");
            $("#DispositivoRed_Descripcion").val("");
            $("#DispositivoRed_PuertosUtilizados").val("0");
            $("#DispositivoRed_PuertosTotales").val("0");
            $("#DispositivoRed_Protocolo").val("");

            $("#DispositivoRed_TipoDispositivoRed_ID").val($("#DispositivoRed_TipoDispositivoRed_ID option:first").val());

            document.getElementById("btnAgregarDispositivoRed").value = "Agregar Dispositivo de Red";

            return false;
        }

        function ActualizarRadio(prop, valor) {
            
            var rdlControl = $("input:radio[name='" + prop + "']");

            if (valor != null) {

                rdlControl.filter("[value='" + String(valor) + "']").prop('checked', true);

            }
            else {

                rdlControl.removeAttr('checked');

            }

        }

        function VerMaquina(maqId) {

            var moveLeft = 60;
            var moveDown = 75;




            $('div#pop-up').show()
                    .css('top', document.getElementById("info").offsetTop + moveDown)
                    .css('left', document.getElementById("info").offsetLeft + moveLeft)
                    .appendTo('td#info');


            showProgress();

            $.getJSON("ObtenerMaquinaAsync", { MaqId: maqId }, actualizarPopupMaquina)
            .error(function (request, textStatus, errorThrown) { alert(errorThrown); })



        }

        function CerrarMaquina() {
            $('div#pop-up').hide();
        };

        actualizarPopupMaquina = function (data) {

            //$('#Maquina_ID').val(data.ID);
            //$("#Maquina_Marca").val(data.Marca);
            //$("#Maquina_Nombre").val(data.Nombre);
            //$("#Maquina_Procesador").val(data.Procesador);
            //$("#Maquina_MemoriaRAM").val(data.MemoriaRAM);
            //$("#Maquina_CapacidadDiscoDuro").val(data.CapacidadDiscoDuro);
            //$("#Maquina_SistemaOperativo").val(data.SistemaOperativo);
            //$("#Maquina_DispositivoSonido").val(data.DispositivoSonido);
            //$("#Maquina_Comentarios").val(data.Comentarios);
            //$("#Maquina_PlacaVideo").val(data.PlacaVideo);

            //ActualizarRadio("Maquina.PerteneceARed", data.PerteneceARed);

            //ActualizarRadio("Maquina.TieneMicrofono", data.TieneMicrofono);

            //ActualizarRadio("Maquina.LectoraCDDVD", data.LectoraCDDVD);

            //ActualizarRadio("Maquina.Disquetera", data.Disquetera);

            //$("#Maquina_Monitor").val(data.Monitor);

            //ActualizarRadio("Maquina.Webcam", data.Webcam);

            //$("#Maquina_GrupoDeTrabajo").val(data.GrupoDeTrabajo);
            //$("#Maquina_IP").val(data.IP);
            //$("#Maquina_Ubicacion").val(data.Ubicacion);

            hideProgress();

        };

    </script>
}
